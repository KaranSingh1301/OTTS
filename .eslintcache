[{"D:\\webDev\\travel\\src\\index.js":"1","D:\\webDev\\travel\\src\\App.js":"2","D:\\webDev\\travel\\src\\components\\pages\\Services\\Services.js":"3","D:\\webDev\\travel\\src\\components\\pages\\Home\\Home.js":"4","D:\\webDev\\travel\\src\\components\\pages\\Products\\Products.js":"5","D:\\webDev\\travel\\src\\components\\pages\\SignUp\\SignUp.js":"6","D:\\webDev\\travel\\src\\components\\navbar\\Navbar.js":"7","D:\\webDev\\travel\\src\\components\\pages\\Login\\Login.js":"8","D:\\webDev\\travel\\src\\components\\Cards.js":"9","D:\\webDev\\travel\\src\\components\\HeroSection.js":"10","D:\\webDev\\travel\\src\\components\\footer\\Footer.js":"11","D:\\webDev\\travel\\src\\components\\Button.js":"12","D:\\webDev\\travel\\src\\components\\CardItems.js":"13"},{"size":151,"mtime":1614508114666,"results":"14","hashOfConfig":"15"},{"size":853,"mtime":1614508114640,"results":"16","hashOfConfig":"15"},{"size":448,"mtime":1614508114664,"results":"17","hashOfConfig":"15"},{"size":314,"mtime":1614508114649,"results":"18","hashOfConfig":"15"},{"size":524,"mtime":1614508114662,"results":"19","hashOfConfig":"15"},{"size":5230,"mtime":1614508114665,"results":"20","hashOfConfig":"15"},{"size":2200,"mtime":1614508114677,"results":"21","hashOfConfig":"15"},{"size":2436,"mtime":1614508114651,"results":"22","hashOfConfig":"15"},{"size":1570,"mtime":1608821344099,"results":"23","hashOfConfig":"15"},{"size":1012,"mtime":1614508114645,"results":"24","hashOfConfig":"15"},{"size":3806,"mtime":1614508114647,"results":"25","hashOfConfig":"15"},{"size":730,"mtime":1614508114641,"results":"26","hashOfConfig":"15"},{"size":670,"mtime":1614508114642,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"qdxd12",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},"D:\\webDev\\travel\\src\\index.js",[],["59","60"],"D:\\webDev\\travel\\src\\App.js",["61"],"import React from \"react\";\r\nimport \"./App.css\";\r\nimport Navbar from \"./components/navbar/Navbar\";\r\nimport Home from \"./components/pages/Home/Home\";\r\nimport Services from \"./components/pages/Services/Services\";\r\nimport Products from \"./components/pages/Products/Products\";\r\nimport SignUp from \"./components/pages/SignUp/SignUp\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Login from \"./components/pages/Login/Login\";\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Router>\r\n        <Navbar />\r\n        <Switch>\r\n          <Route path=\"/\" exact component={Home} />\r\n          <Route path=\"/services\" component={Services} />\r\n          <Route path=\"/products\" component={Login} />\r\n          <Route path=\"/sign-up\" component={SignUp} />\r\n        </Switch>\r\n      </Router>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\webDev\\travel\\src\\components\\pages\\Services\\Services.js",[],"D:\\webDev\\travel\\src\\components\\pages\\Home\\Home.js",[],"D:\\webDev\\travel\\src\\components\\pages\\Products\\Products.js",[],"D:\\webDev\\travel\\src\\components\\pages\\SignUp\\SignUp.js",["62","63","64"],"import React from \"react\";\r\nimport \"./SignUp.css\";\r\nimport { useFormik } from \"formik\";\r\n\r\nfunction SignUp() {\r\n  const validate = (values) => {\r\n    const errors = {};\r\n\r\n    if (!values.email) {\r\n      errors.email = \"Required\";\r\n    } else if (\r\n      !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\r\n    ) {\r\n      errors.email = \"Invalid email address\";\r\n    }\r\n\r\n    if (!values.username) {\r\n      errors.username = \"Required\";\r\n    } else if (values.username.length > 15) {\r\n      errors.username = \"Must be 15 characters or less\";\r\n    }\r\n\r\n    if (!values.password) {\r\n      errors.password = \"Required\";\r\n    } else if (values.password.length > 20) {\r\n      errors.password = \"Must be 20 characters or less\";\r\n    }\r\n\r\n    if (!values.confirmPassword) {\r\n      errors.confirmPassword = \"Required\";\r\n    } else if (values.password != values.confirmPassword) {\r\n      errors.confirmPassword = \"Passward did not match\";\r\n    } else if (values.confirmPassword.length > 20) {\r\n      errors.confirmPassword = \"Must be 20 characters or less\";\r\n    }\r\n\r\n    if (!values.phone) {\r\n      errors.phone = \"Required\";\r\n    } else if (!/^[1-9]+[0-9]{9}$/i.test(values.phone)) {\r\n      errors.phone = \"Invalid Phone number\";\r\n    } else if (values.phone.length != 10) {\r\n      errors.phone = \"Must be 10 digits\";\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: \"\",\r\n      username: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      phone: \"\",\r\n    },\r\n    validate,\r\n    onSubmit: (values) => {\r\n      console.log(values);\r\n      alert(\"form submite successful\");\r\n    },\r\n  });\r\n  // console.log(formik.errors);\r\n  return (\r\n    <div className=\"signUp\">\r\n      <img className=\"signUp__backgroundImage\" src=\"/images/signUpBg.jpg\" />\r\n      <form className=\"signUp__form\" onSubmit={formik.handleSubmit}>\r\n        <div className=\"signUp__title\">SIGN UP</div>\r\n        <div className=\"signUp__fields\">\r\n          <div className=\"signUp__form--inputArea\">\r\n            <label className=\"signUp__label\">Email Address</label>\r\n            <input\r\n              className=\"signUp__input\"\r\n              name=\"email\"\r\n              type=\"email\"\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              value={formik.values.email}\r\n            />\r\n          </div>\r\n          {formik.touched.email && formik.errors.email ? (\r\n            <div className=\"signUp--error\">{formik.errors.email}</div>\r\n          ) : null}\r\n        </div>\r\n        <div className=\"signUp__fields\">\r\n          <div className=\"signUp__form--inputArea\">\r\n            <label className=\"signUp__label\">Username</label>\r\n            <input\r\n              className=\"signUp__input\"\r\n              name=\"username\"\r\n              type=\"text\"\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              value={formik.values.username}\r\n            />\r\n          </div>\r\n          {formik.touched.username && formik.errors.username ? (\r\n            <div className=\"signUp--error\">{formik.errors.username}</div>\r\n          ) : null}\r\n        </div>\r\n        <div className=\"signUp__fields\">\r\n          <div className=\"signUp__form--inputArea\">\r\n            <label className=\"signUp__label\">Password</label>\r\n            <input\r\n              className=\"signUp__input\"\r\n              name=\"password\"\r\n              type=\"password\"\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              value={formik.values.password}\r\n            />\r\n          </div>\r\n          {formik.touched.password && formik.errors.password ? (\r\n            <div className=\"signUp--error\">{formik.errors.password}</div>\r\n          ) : null}\r\n        </div>\r\n        <div className=\"signUp__fields\">\r\n          <div className=\"signUp__form--inputArea\">\r\n            <label className=\"signUp__label\">Confirm Password</label>\r\n            <input\r\n              className=\"signUp__input\"\r\n              type=\"password\"\r\n              name=\"confirmPassword\"\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              value={formik.values.confirmPassword}\r\n            />\r\n          </div>\r\n          {formik.touched.confirmPassword && formik.errors.confirmPassword ? (\r\n            <div className=\"signUp--error\">{formik.errors.confirmPassword}</div>\r\n          ) : null}\r\n        </div>\r\n        <div className=\"signUp__fields\">\r\n          <div className=\"signUp__form--inputArea\">\r\n            <label className=\"signUp__label\">Phone </label>\r\n            <input\r\n              className=\"signUp__input\"\r\n              name=\"phone\"\r\n              type=\"text\"\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              value={formik.values.phone}\r\n            />\r\n          </div>\r\n          {formik.touched.phone && formik.errors.phone ? (\r\n            <div className=\"signUp--error\">{formik.errors.phone}</div>\r\n          ) : null}\r\n        </div>\r\n        <button className=\"signUp__button\" type=\"submit\">\r\n          SUBMIT\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignUp;\r\n","D:\\webDev\\travel\\src\\components\\navbar\\Navbar.js",[],"D:\\webDev\\travel\\src\\components\\pages\\Login\\Login.js",["65"],"import React from \"react\";\r\nimport \"./Login.css\";\r\nimport { useFormik } from \"formik\";\r\n\r\nfunction Login() {\r\n  const validate = (values) => {\r\n    const errors = {};\r\n\r\n    if (!values.email) {\r\n      errors.email = \"Required\";\r\n    } else if (\r\n      !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\r\n    ) {\r\n      errors.email = \"Invalid email address\";\r\n    }\r\n    if (!values.password) {\r\n      errors.password = \"Required\";\r\n    } else if (values.password.length > 20) {\r\n      errors.password = \"Must be 20 characters or less\";\r\n    }\r\n    return errors;\r\n  };\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: \"\",\r\n      password: \"\",\r\n    },\r\n    validate,\r\n    onSubmit: (values) => {\r\n      console.log(values);\r\n      alert(\"form submite successful\");\r\n    },\r\n  });\r\n  return (\r\n    <div className=\"login\">\r\n      <img className=\"login__backgroundImage\" src=\"/images/loginBg.jpg\" />\r\n      <form className=\"login__form\" onSubmit={formik.handleSubmit}>\r\n        <div className=\"login__title\">LOGIN</div>\r\n        <div className=\"login__fields\">\r\n          <div className=\"login__form--inputArea\">\r\n            <label className=\"login__label\">Email Address</label>\r\n            <input\r\n              className=\"login__input\"\r\n              name=\"email\"\r\n              type=\"email\"\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              value={formik.values.email}\r\n            />\r\n          </div>\r\n          {formik.touched.email && formik.errors.email ? (\r\n            <div className=\"login--error\">{formik.errors.email}</div>\r\n          ) : null}\r\n        </div>\r\n        <div className=\"login__fields\">\r\n          <div className=\"login__form--inputArea\">\r\n            <label className=\"login__label\">Password</label>\r\n            <input\r\n              className=\"login__input\"\r\n              name=\"password\"\r\n              type=\"password\"\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              value={formik.values.password}\r\n            />\r\n          </div>\r\n          {formik.touched.password && formik.errors.password ? (\r\n            <div className=\"login--error\">{formik.errors.password}</div>\r\n          ) : null}\r\n        </div>\r\n        <button className=\"login__button\" type=\"submit\">\r\n          SUBMIT\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","D:\\webDev\\travel\\src\\components\\Cards.js",[],"D:\\webDev\\travel\\src\\components\\HeroSection.js",[],"D:\\webDev\\travel\\src\\components\\footer\\Footer.js",[],"D:\\webDev\\travel\\src\\components\\Button.js",[],"D:\\webDev\\travel\\src\\components\\CardItems.js",["66"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction CardItem(props) {\r\n  return (\r\n    <>\r\n      <li className=\"cards__item\">\r\n        <Link className=\"cards__item__link\" to={props.path}>\r\n          <figure className=\"cards__item__pic-wrap\" data-category={props.label}>\r\n            <img\r\n              className=\"cards__item__img\"\r\n              alt=\"Travel Image\"\r\n              src={props.src}\r\n            />\r\n          </figure>\r\n          <div className=\"cards__item__info\">\r\n            <h5 className=\"cards__item__text\">{props.text}</h5>\r\n          </div>\r\n        </Link>\r\n      </li>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CardItem;\r\n",{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":6,"column":8,"nodeType":"73","messageId":"74","endLine":6,"endColumn":16},{"ruleId":"75","severity":1,"message":"76","line":31,"column":32,"nodeType":"77","messageId":"78","endLine":31,"endColumn":34},{"ruleId":"75","severity":1,"message":"76","line":41,"column":36,"nodeType":"77","messageId":"78","endLine":41,"endColumn":38},{"ruleId":"79","severity":1,"message":"80","line":64,"column":7,"nodeType":"81","endLine":64,"endColumn":77},{"ruleId":"79","severity":1,"message":"80","line":36,"column":7,"nodeType":"81","endLine":36,"endColumn":75},{"ruleId":"82","severity":1,"message":"83","line":10,"column":13,"nodeType":"81","endLine":14,"endColumn":15},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"no-unused-vars","'Products' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-global-assign","no-unsafe-negation"]